@model BillerFormDataset
<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6"> <h1>Edit Biller Data Set</h1> </div>
            <div class="col-md-6"><a asp-action="Index" class="btn btn-secondary">Return To List</a></div>
        </div>
        
    </div> 
    <form method="post" asp-action="Edit">
        <div class="card-body">

            <div class="form-horizontal">
                <div class="row">
                    <h5 class="card-title">Edit Biller Dataset</h5>
                   <input id="datasetid" hidden asp-for="Id" />
                    <div class="col-6">
                        <div class="form-group">
                            <label>Dataset Name</label>
                            <input asp-for="DatasetName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Unique Id</label>
                            <input  asp-for="UniqueId" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Biller</label>
                            @Html.DropDownListFor(model => model.BillerId, (SelectList)ViewBag.BillerList, "Select a Biller", new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            <label>Created By</label>
                            <input  asp-for="CreatedBy" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Created At</label>
                            <input  asp-for="CreatedAt" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Updated By</label>
                            <input  asp-for="UpdatedBy" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Updated At</label>
                            <input  asp-for="UpdatedAt" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-horizontal mb-3">
                <div class="row pt-4">
                    <h2 class="card-title border border-1 bg-light ">Edit Biller Dataset Fields</h2>

                    @for (var i = 0; i < Model.BillerFormDatasetFields.Count; i++)
                    {
                        <h3>Dataset Fields</h3>
                        <input hidden asp-for="BillerFormDatasetFields[i].Id" />
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].FieldName">Field Name</label>
                                <input asp-for="BillerFormDatasetFields[i].FieldName" class="form-control" />
                            </div>
                          
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].MaxLength"></label>
                                <input asp-for="BillerFormDatasetFields[i].MaxLength" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].Regex"></label>
                                <input asp-for="BillerFormDatasetFields[i].Regex" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].CreatedBy"></label>
                                <input asp-for="BillerFormDatasetFields[i].CreatedBy" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].CreatedAt"></label>
                                <input asp-for="BillerFormDatasetFields[i].CreatedAt" class="form-control" />
                            </div>
                        </div>


                        <div class="col-sm-4">

                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].MinValue"></label>
                                <input asp-for="BillerFormDatasetFields[i].MinValue" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].MaxValue"></label>
                                <input asp-for="BillerFormDatasetFields[i].MaxValue" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].FieldOrder"></label>
                                <input asp-for="BillerFormDatasetFields[i].FieldOrder" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].FriendlyFieldName"></label>
                                <input asp-for="BillerFormDatasetFields[i].FriendlyFieldName" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].UpdatedBy"></label>
                                <input asp-for="BillerFormDatasetFields[i].UpdatedBy" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].UpdatedAt"></label>
                                <input asp-for="BillerFormDatasetFields[i].UpdatedAt" class="form-control" />
                            </div>

                        </div>
                        <div class="col-sm-4">


                            <div class="form-group">
                                <label>Field Type</label>
                                @Html.DropDownListFor(model => model.BillerFormDatasetFields[i].FieldTypeId, (SelectList)ViewBag.FieldTypeList, "-- Select --", new { @class = "form-control"})
                            </div>

                            <div class="form-group">
                                <label asp-for="BillerFormDatasetFields[i].IsActive">Is Active</label>

                                <div>
                                    <input type="radio" asp-for="BillerFormDatasetFields[i].IsMandatory" value="true" /> Yes
                                    <input type="radio" asp-for="BillerFormDatasetFields[i].IsMandatory" value="false" /> No
                                </div>
                            </div>
                                <div class="form-group">
                                    <label asp-for="BillerFormDatasetFields[i].IsActive">Is Active</label>

                                    <div>
                                        <input type="radio" asp-for="BillerFormDatasetFields[i].IsActive" value="true" /> Yes
                                        <input type="radio" asp-for="BillerFormDatasetFields[i].IsActive" value="false" /> No
                                    </div>
                                </div>        
                            <div class="col-md-4 col-lg-offset-4">
                                <a onclick="removeFromList(@Model.BillerFormDatasetFields[i].Id, @Model.Id)" class="btn btn-danger">Remove</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
         
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Save Details</button>
            <a id="addFieldBtn" onclick="addNewField()" class="btn btn-primary">Add New Field</a>
        </div>

        <div id="addField" style="display:none" class="form-horizontal mb-3">
            <div class="row pt-4">
                <h3 class="card-title">Biller Dataset Fields</h3>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label>Field Name</label>
                        <input type="text" id="addFieldName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Max Length</label>
                        <input type="number" id="addMaxLength" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Regex</label>
                        <input type="text" id="addRegex" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Created By</label>
                        <input type="number" id="addCreatedBy" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Created At</label>
                        <input type="datetime-local" id="addCreatedAt" class="form-control" />

                    </div>
                </div>

                <div class="col-sm-4">

                    <div class="form-group">
                        <label>Min Value</label>
                        <input type="number" id="minValue" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Max Value</label>
                        <input type="number" id="maxValue" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Field Order</label>
                        <input type="number" id="fieldOrder" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Friendly Field Name</label>
                        <input type="text" id="friendlyFieldName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Updated By</label>
                        <input type="number" id="addUpdatedBy" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Updated At</label>
                        <input type="datetime-local" id="addUpdatedAt" class="form-control" />
                    </div>

                </div>

                <div class="col-sm-4">


                    <div class="form-group">
                        <label>Field Type</label>
                        @Html.DropDownList("SelectedValue", (IEnumerable<SelectListItem>)ViewBag.FieldTypeList, "-- Select --", new { @class = "form-control" ,@id="fieldTypeId"})
                    </div>

                    <div class="form-group">
                        <label>Is Mandatory</label>
                        <input type="radio" name="SelectedValueForMandatory" value="1">True
                        <input type="radio" name="SelectedValueForMandatory" value="0">False
                    </div>

                    <div class="form-group">
                        <label>Is Active</label>
                        <input type="radio" name="SelectedValueActive" value="1">True
                        <input type="radio" name="SelectedValueActive" value="0">False
                    </div>
                    <div class="col-md-4 col-lg-offset-4">
                        <a id="addToList" class="btn btn-primary">Add To List</a>
                    </div>
                </div>
            </div>

            <table id="detailsTable" class="table">
                <thead class="mt-4">
                    <tr>
                        <th>Field Name</th>
                        <th>Max Length</th>
                        <th>Regex</th>
                        <th>Created By</th>

                        <th>Created At</th>
                        <th>Min Value</th>
                        <th>Max Value</th>
                        <th>Field Order</th>
                        <th>Friendly Field Name</th>

                        <th>Updated By</th>
                        <th>Updated At</th>
                        <th>IsMandatory</th>
                        <th>IsActive</th>
                        <th>Field Type</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <button id="saveOrder" type="submit" class="btn btn-danger">Add New Fields</button>

        </div>

    </form>
</div>


@section scripts{
    <script>
        function removeFromList(fieldId,datasetId) {
            $.ajax({
                url: '/Home/RemoveDataFields',
                type: 'POST', 
                data: { fieldId: fieldId, datasetId: datasetId },
                success: function () {
                    // Reload the page or update the UI as needed
                    //location.reload(); // This will reload the current page


                    $.ajax({
                        url: '/Home/Edit', // Replace with the actual URL of your action method
                        type: 'GET',
                        data: { id: datasetId },
                        success: function (response) {
                            location.reload(); // This will reload the current page
                            //alert(response);

                        },
                        error: function () {
                            alert('An error occurred while calling the second action method.');
                        }
                    });


                },
                error: function () {
                    alert('An error occurred while removing the item.');
                }
            });
        }

        function addNewField() {
            var addFieldDiv = document.getElementById('addField');
            addFieldDiv.style.display = 'block';
        }
    

        //Add Multiple Order.
        $("#addToList").click(function (e) {
            e.preventDefault();

            if ($.trim($("#fieldTypeId").val()) == "") return;

            var addFieldName = $("#addFieldName").val(),
                addMaxLength = $("#addMaxLength").val(),
                addRegex = $("#addRegex").val(),
                addCreatedBy = $("#addCreatedBy").val(),
                addCreatedAt = $("#addCreatedAt").val(),
                MinValue = $("#minValue").val(),
                MaxValue = $("#maxValue").val(),
                FieldOrder = $("#fieldOrder").val(),
                FriendlyFieldName = $("#friendlyFieldName").val(),
                addUpdatedBy = $("#addUpdatedBy").val(),
                addUpdatedAt = $("#addUpdatedAt").val(),
                IsMandatory = document.querySelector("input[name='SelectedValueForMandatory']:checked").value,
                IsActive = document.querySelector("input[name='SelectedValueActive']:checked").value,
                FieldType = $("#fieldTypeId").val(),
                detailsTableBody = $("#detailsTable tbody");
            var productItem = '<tr><td>' + addFieldName + '</td><td>' + addMaxLength + '</td><td>' + addRegex + '</td><td>' + addCreatedBy + '</td><td>' + addCreatedAt + '</td><td>' + MinValue + '</td><td>' + MaxValue + '</td><td>' + FieldOrder + '</td><td>' + FriendlyFieldName + '</td><td>' + addUpdatedBy + '</td><td>' + addUpdatedAt + '</td><td>' + IsMandatory + '</td><td>' + IsActive + '</td><td>' + FieldType + '</td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td></tr>';
            detailsTableBody.append(productItem);
            clearItem();
        });
        //After Add A New Order In The List, Clear Clean The Form For Add More Order.
        function clearItem() {
            $("#addFieldName").val('');
            $("#addMaxLength").val('');
            $("#addRegex").val('');
            $("#addCreatedBy").val('');
            $("#addCreatedAt").val('');
            $("#minValue").val('');
            $("#maxValue").val('');
            $("#fieldOrder").val('');
            $("#friendlyFieldName").val('');
            $("#addUpdatedBy").val('');
            $("#addUpdatedAt").val('');
            $("#fieldTypeId").val('');
            $("input[name='SelectedValueForMandatory']").prop('checked', false);
            $("input[name='SelectedValueActive']").prop('checked', false);

        }
        // After Add A New Order In The List, If You Want, You Can Remove It.
        $(document).on('click', 'a.deleteItem', function (e) {
            e.preventDefault();
            var $self = $(this);
            if ($(this).attr('data-itemId') == "0") {
                $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
                    $(this).remove();
                });
            }
            clearItem();
        });

        function replaceEmptyStringsWithNull(obj) {
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    if (typeof obj[key] === 'string' && obj[key] === '') {
                        obj[key] = null; // Replace empty strings with null
                    } else if (typeof obj[key] === 'object' && obj[key] !== null) {
                        // Recursively call the function for nested objects and arrays
                        replaceEmptyStringsWithNull(obj[key]);
                    }
                }
            }
        }

        //After Click Save Button Pass All Data View To Controller For Save Database
        function saveOrder(data) {
            var clonedData = JSON.parse(JSON.stringify(data));
            replaceEmptyStringsWithNull(clonedData);
            console.log(clonedData);
            var jsonData = JSON.stringify(clonedData);
            console.log(jsonData);
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Home/AddDataFields",
                data: jsonData,
                success: function (result) {
                    //alert(result);
                    //location.reload();

                    $.ajax({
                        url: '/Home/Edit', // Replace with the actual URL of your action method
                        type: 'GET',
                        data: { id: data.id },
                        success: function (response) {
                            location.reload(); // This will reload the current page
                            //alert(response);

                        },
                        error: function () {
                            alert('An error occurred while calling the second action method.');
                        }
                    });
                },
                error: function () {
                   // alert("Error!")
                }
            });
        }


        //Collect Multiple Order List For Pass To Controller
        $("#saveOrder").click(function (e) {
            e.preventDefault();

            var orderArr = [];
            orderArr.length = 0;

            $.each($("#detailsTable tbody tr"), function () {
                orderArr.push({

                    fieldName: $(this).find('td:eq(0)').html(),
                    maxLength: $(this).find('td:eq(1)').html(),
                    regex: $(this).find('td:eq(2)').html(),
                    createdBy: $(this).find('td:eq(3)').html(),
                    createdAt: $(this).find('td:eq(4)').html(),
                    minValue: $(this).find('td:eq(5)').html(),
                    maxValue: $(this).find('td:eq(6)').html(),
                    fieldOrder: $(this).find('td:eq(7)').html(),
                    friendlyFieldName: $(this).find('td:eq(8)').html(),
                    updatedBy: $(this).find('td:eq(9)').html(),
                    updatedAt: $(this).find('td:eq(10)').html(),
                    isMandatory: $(this).find('td:eq(11)').html(),
                    isActive: $(this).find('td:eq(12)').html(),
                    fieldTypeId: $(this).find('td:eq(13)').html()

                });
            });


            var data = {
                id: $("#datasetid").val(),
                order: orderArr
            };



            $.when(saveOrder(data)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });
        });




    </script>
}